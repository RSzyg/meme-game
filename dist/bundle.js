/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/Loading.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Loading.ts":
/*!************************!*\
  !*** ./src/Loading.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Main_1 = __webpack_require__(/*! ./Main */ \"./src/Main.ts\");\nvar Storage_1 = __webpack_require__(/*! ./Storage */ \"./src/Storage.ts\");\nwindow.onload = function () {\n    var main = new Main_1.default();\n    var imgSrcArr = [\n        \"./resource/up.jpg\",\n        \"./resource/down.jpg\",\n        \"./resource/left.jpg\",\n        \"./resource/right.jpg\",\n        \"./resource/attack.jpg\",\n        \"./resource/dead.jpeg\",\n    ];\n    var total = imgSrcArr.length;\n    var current = 0;\n    var name;\n    // init map\n    for (var r = 0; r < 600; r++) {\n        Storage_1.default.fullyMap[r] = [];\n        for (var c = 0; c < 800; c++) {\n            var i = Math.floor(r / 40);\n            var j = Math.floor(c / 40);\n            Storage_1.default.fullyMap[r][c] = Storage_1.default.simplifiedMap[i][j];\n        }\n    }\n    // load images\n    for (var i = 0; i < total; i++) {\n        var path = imgSrcArr[i];\n        name = path.substring(path.lastIndexOf(\"/\") + 1, path.lastIndexOf(\".\"));\n        Storage_1.default.images[name] = new Image();\n        Storage_1.default.images[name].src = imgSrcArr[i];\n        Storage_1.default.images[name].style.width = \"54px\";\n        Storage_1.default.images[name].style.height = \"54px\";\n        Storage_1.default.images[name].onload = function () {\n            current++;\n            if (current === total) {\n                main.createScene();\n            }\n        };\n    }\n};\n\n\n//# sourceURL=webpack:///./src/Loading.ts?");

/***/ }),

/***/ "./src/Main.ts":
/*!*********************!*\
  !*** ./src/Main.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Role_1 = __webpack_require__(/*! ./Role */ \"./src/Role.ts\");\nvar Storage_1 = __webpack_require__(/*! ./Storage */ \"./src/Storage.ts\");\nvar Main = /** @class */ (function () {\n    function Main() {\n        this.roles = {};\n        this.keydown = {};\n        this.keycycle = {};\n    }\n    Main.prototype.createScene = function () {\n        var _this = this;\n        // create mini-self-role canvas\n        Storage_1.default.miniSelfRoleCanvas = document.createElement(\"canvas\");\n        Storage_1.default.miniSelfRoleCanvas.style.zIndex = \"4\";\n        Storage_1.default.miniSelfRoleCanvas.style.position = \"absolute\";\n        Storage_1.default.miniSelfRoleCanvas.style.right = \"0px\";\n        Storage_1.default.miniSelfRoleCanvas.style.top = \"0px\";\n        Storage_1.default.miniSelfRoleCanvas.height = 150;\n        Storage_1.default.miniSelfRoleCanvas.width = 200;\n        document.getElementById(\"display\").appendChild(Storage_1.default.miniSelfRoleCanvas);\n        Storage_1.default.miniSelfRoleCtx = Storage_1.default.miniSelfRoleCanvas.getContext(\"2d\");\n        // create mini-other-role canvas\n        Storage_1.default.miniOtherRoleCanvas = document.createElement(\"canvas\");\n        Storage_1.default.miniOtherRoleCanvas.style.zIndex = \"4\";\n        Storage_1.default.miniOtherRoleCanvas.style.position = \"absolute\";\n        Storage_1.default.miniOtherRoleCanvas.style.right = \"0px\";\n        Storage_1.default.miniOtherRoleCanvas.style.top = \"0px\";\n        Storage_1.default.miniOtherRoleCanvas.height = 150;\n        Storage_1.default.miniOtherRoleCanvas.width = 200;\n        document.getElementById(\"display\").appendChild(Storage_1.default.miniOtherRoleCanvas);\n        Storage_1.default.miniOtherRoleCtx = Storage_1.default.miniOtherRoleCanvas.getContext(\"2d\");\n        // create mini-map canvas\n        Storage_1.default.miniMapCanvas = document.createElement(\"canvas\");\n        Storage_1.default.miniMapCanvas.style.zIndex = \"3\";\n        Storage_1.default.miniMapCanvas.style.position = \"absolute\";\n        Storage_1.default.miniMapCanvas.style.right = \"0px\";\n        Storage_1.default.miniMapCanvas.style.top = \"0px\";\n        Storage_1.default.miniMapCanvas.height = 150;\n        Storage_1.default.miniMapCanvas.width = 200;\n        document.getElementById(\"display\").appendChild(Storage_1.default.miniMapCanvas);\n        Storage_1.default.miniMapCtx = Storage_1.default.miniMapCanvas.getContext(\"2d\");\n        // create bar canvas\n        Storage_1.default.barCanvas = document.createElement(\"canvas\");\n        Storage_1.default.barCanvas.style.zIndex = \"2\";\n        Storage_1.default.barCanvas.style.position = \"absolute\";\n        Storage_1.default.barCanvas.height = Storage_1.default.sceneHeight;\n        Storage_1.default.barCanvas.width = Storage_1.default.sceneWidth;\n        document.getElementById(\"display\").appendChild(Storage_1.default.barCanvas);\n        Storage_1.default.barCtx = Storage_1.default.barCanvas.getContext(\"2d\");\n        // create main canvas\n        Storage_1.default.mainCanvas = document.createElement(\"canvas\");\n        Storage_1.default.mainCanvas.style.zIndex = \"1\";\n        Storage_1.default.mainCanvas.style.position = \"absolute\";\n        Storage_1.default.mainCanvas.height = Storage_1.default.sceneHeight;\n        Storage_1.default.mainCanvas.width = Storage_1.default.sceneWidth;\n        document.getElementById(\"display\").appendChild(Storage_1.default.mainCanvas);\n        Storage_1.default.mainCtx = Storage_1.default.mainCanvas.getContext(\"2d\");\n        this.renderMap();\n        this.createRole(\"2\");\n        this.createRole(\"3\");\n        this.renderMiniMap();\n        this.update();\n        document.addEventListener(\"keydown\", function (e) { return _this.keyboardController(e); });\n        document.addEventListener(\"keyup\", function (e) { return _this.keyboardController(e); });\n    };\n    Main.prototype.renderMap = function () {\n        for (var r = 0; r < Storage_1.default.simplifiedMap.length; r++) {\n            for (var c = 0; c < Storage_1.default.simplifiedMap[r].length; c++) {\n                if (Storage_1.default.simplifiedMap[r][c] === 1) {\n                    Storage_1.default.mainCtx.fillStyle = \"#ffffff\";\n                    Storage_1.default.mainCtx.fillRect(c * 40, r * 40, 40, 40);\n                    Storage_1.default.mainCtx.strokeRect(c * 40, r * 40, 40, 40);\n                }\n            }\n        }\n    };\n    Main.prototype.renderMiniMap = function () {\n        Storage_1.default.miniMapCtx.globalAlpha = 0.4;\n        Storage_1.default.miniMapCtx.fillStyle = \"#ffffff\";\n        Storage_1.default.miniMapCtx.fillRect(0, 0, 200, 150);\n        for (var r = 0; r < Storage_1.default.simplifiedMap.length; r++) {\n            for (var c = 0; c < Storage_1.default.simplifiedMap[r].length; c++) {\n                if (Storage_1.default.simplifiedMap[r][c] === 1) {\n                    Storage_1.default.miniMapCtx.fillStyle = \"#000000\";\n                    Storage_1.default.miniMapCtx.fillRect(c * 10, r * 10, 10, 10);\n                }\n            }\n        }\n    };\n    Main.prototype.createRole = function (id) {\n        var data = {\n            roleId: id,\n            width: 54,\n            height: 54,\n            x: (+id - 2) * 100,\n            y: Storage_1.default.sceneHeight - 54,\n            maxHealthPoint: 100,\n            attackPower: 3,\n            attackRange: 12,\n            moveSpeed: 4,\n            jumpSpeed: 19,\n        };\n        this.roles[id] = new Role_1.default(data);\n    };\n    Main.prototype.keyboardController = function (e) {\n        if (e.type === \"keydown\") {\n            this.keydown[e.keyCode] = true;\n        }\n        else if (e.type === \"keyup\") {\n            this.keydown[e.keyCode] = false;\n            this.keycycle[e.keyCode] = true;\n        }\n    };\n    Main.prototype.clearScene = function () {\n        Storage_1.default.mainCanvas.height = Storage_1.default.mainCanvas.height;\n        Storage_1.default.barCanvas.height = Storage_1.default.barCanvas.height;\n        Storage_1.default.miniSelfRoleCanvas.height = Storage_1.default.miniSelfRoleCanvas.height;\n        Storage_1.default.miniSelfRoleCtx.globalAlpha = 0.5;\n        Storage_1.default.miniOtherRoleCanvas.height = Storage_1.default.miniOtherRoleCanvas.height;\n        Storage_1.default.miniOtherRoleCtx.globalAlpha = 0.5;\n    };\n    /**\n     * 37 ←\n     * 38 ↑\n     * 39 →\n     * 40 ↓\n     * 68 D\n     * 82 R\n     * 71 G\n     * 70 F\n     * 192 `\n     * 191 /\n     */\n    Main.prototype.update = function () {\n        var _this = this;\n        this.clearScene();\n        // player1\n        if (this.roles[\"2\"].roleStatus !== \"dead\") {\n            if (this.keydown[38]) {\n                if (!this.roles[\"2\"].verticalTimer) {\n                    this.roles[\"2\"].jumpSpeed = this.roles[\"2\"].initJumpSpeed;\n                    this.roles[\"2\"].verticalTimer = true;\n                }\n            }\n            if (this.keydown[37]) {\n                if (!this.keydown[39]) {\n                    this.roles[\"2\"].horizontalStatus = \"left\";\n                    this.move(\"2\", 0);\n                }\n            }\n            if (this.keydown[39]) {\n                if (!this.keydown[37]) {\n                    this.roles[\"2\"].horizontalStatus = \"right\";\n                    this.move(\"2\", 2);\n                }\n            }\n            if (this.roles[\"2\"].verticalTimer) {\n                if (this.roles[\"2\"].jumpSpeed > 0) {\n                    this.roles[\"2\"].verticalStatus = \"up\";\n                    this.move(\"2\", 1);\n                }\n                else {\n                    this.roles[\"2\"].verticalStatus = \"down\";\n                    this.move(\"2\", 3);\n                }\n                this.roles[\"2\"].jumpSpeed--;\n            }\n            else {\n                this.roles[\"2\"].jumpSpeed = -1;\n                this.roles[\"2\"].verticalTimer = true;\n            }\n            if (this.keycycle[191]) {\n                this.roles[\"2\"].roleStatus = \"attack\";\n                this.roles[\"2\"].attackTimer = 10;\n                for (var _i = 0, _a = this.roles[\"2\"].attackId; _i < _a.length; _i++) {\n                    var aid = _a[_i];\n                    this.roles[aid].healthPoint -= this.roles[\"2\"].attackPower;\n                    this.roles[aid].deadthController();\n                }\n                this.keycycle[191] = false;\n            }\n        }\n        // player2\n        if (this.roles[\"3\"].roleStatus !== \"dead\") {\n            if (this.keydown[82]) {\n                if (!this.roles[\"3\"].verticalTimer) {\n                    this.roles[\"3\"].jumpSpeed = this.roles[\"3\"].initJumpSpeed;\n                    this.roles[\"3\"].verticalTimer = true;\n                }\n            }\n            if (this.keydown[68]) {\n                if (!this.keydown[71]) {\n                    this.roles[\"3\"].horizontalStatus = \"left\";\n                    this.move(\"3\", 0);\n                }\n            }\n            if (this.keydown[71]) {\n                if (!this.keydown[68]) {\n                    this.roles[\"3\"].horizontalStatus = \"right\";\n                    this.move(\"3\", 2);\n                }\n            }\n            if (this.roles[\"3\"].verticalTimer) {\n                if (this.roles[\"3\"].jumpSpeed > 0) {\n                    this.roles[\"3\"].verticalStatus = \"up\";\n                    this.move(\"3\", 1);\n                }\n                else {\n                    this.roles[\"3\"].verticalStatus = \"down\";\n                    this.move(\"3\", 3);\n                }\n                this.roles[\"3\"].jumpSpeed--;\n            }\n            else {\n                this.roles[\"3\"].jumpSpeed = -1;\n                this.roles[\"3\"].verticalTimer = true;\n            }\n            if (this.keycycle[192]) {\n                this.roles[\"3\"].roleStatus = \"attack\";\n                this.roles[\"3\"].attackTimer = 10;\n                for (var _b = 0, _c = this.roles[\"3\"].attackId; _b < _c.length; _b++) {\n                    var aid = _c[_b];\n                    this.roles[aid].healthPoint -= this.roles[\"3\"].attackPower;\n                    this.roles[aid].deadthController();\n                }\n                this.keycycle[192] = false;\n            }\n        }\n        this.renderMap();\n        for (var key in this.roles) {\n            if (this.roles[key]) {\n                if (!this.roles[key].attackTimer && this.roles[key].roleStatus === \"attack\") {\n                    this.roles[key].roleStatus = undefined;\n                }\n                else {\n                    this.roles[key].attackTimer--;\n                }\n                this.roles[key].render();\n                if (this.ifInAttackRange(key)) {\n                    this.roles[key].renderRange();\n                }\n            }\n        }\n        requestAnimationFrame(function () { return _this.update(); });\n    };\n    Main.prototype.ifInAttackRange = function (id) {\n        var judge = false;\n        this.roles[id].attackId = [];\n        if (this.roles[id].horizontalStatus === \"left\") {\n            var nleft = this.roles[id].x - this.roles[id].attackRange;\n            var nc = (nleft + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n            var nhead = this.roles[id].y;\n            var nfoot = this.roles[id].y + this.roles[id].height;\n            for (var r = nhead; r < nfoot; r++) {\n                var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n                if (Storage_1.default.fullyMap[nr][nc] > 1) {\n                    var ifExist = false;\n                    for (var _i = 0, _a = this.roles[id].attackId; _i < _a.length; _i++) {\n                        var aid = _a[_i];\n                        if (+aid === Storage_1.default.fullyMap[nr][nc]) {\n                            ifExist = true;\n                            break;\n                        }\n                    }\n                    if (!ifExist) {\n                        this.roles[id].attackId.push(Storage_1.default.fullyMap[nr][nc].toString());\n                    }\n                    judge = true;\n                }\n            }\n        }\n        else if (this.roles[id].horizontalStatus === \"right\") {\n            var nright = this.roles[id].x + this.roles[id].width - 1 + this.roles[id].attackRange;\n            var nc = (nright + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n            var nhead = this.roles[id].y;\n            var nfoot = this.roles[id].y + this.roles[id].height;\n            for (var r = nhead; r < nfoot; r++) {\n                var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n                if (Storage_1.default.fullyMap[nr][nc] > 1) {\n                    var ifExist = false;\n                    for (var _b = 0, _c = this.roles[id].attackId; _b < _c.length; _b++) {\n                        var aid = _c[_b];\n                        if (+aid === Storage_1.default.fullyMap[nr][nc]) {\n                            ifExist = true;\n                            break;\n                        }\n                    }\n                    if (!ifExist) {\n                        this.roles[id].attackId.push(Storage_1.default.fullyMap[nr][nc].toString());\n                    }\n                    judge = true;\n                }\n            }\n        }\n        return judge;\n    };\n    // move\n    Main.prototype.move = function (id, k) {\n        var nx = this.roles[id].x;\n        var ny = this.roles[id].y;\n        var nk = (k === 3) ? 1 : k;\n        this.roles[id].y += Storage_1.default.dy[nk] * this.roles[id].jumpSpeed;\n        this.roles[id].x += Storage_1.default.dx[nk] * this.roles[id].moveSpeed;\n        var midWidth = this.roles[id].width / 2;\n        var midHeight = this.roles[id].height / 2;\n        this.roles[id].x = (this.roles[id].x + midWidth + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth - midWidth;\n        this.roles[id].y = (this.roles[id].y + midHeight + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight - midHeight;\n        var isCollide = true;\n        while (isCollide) {\n            isCollide = this.collisionJudge(id, k);\n        }\n        this.roles[id].removeFlag(nx, ny, k);\n    };\n    // handle while hit\n    Main.prototype.collisionJudge = function (id, k) {\n        if (Math.abs(Storage_1.default.dx[k])) {\n            var nleft = (this.roles[id].x + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n            var nright = (this.roles[id].x - 1 + this.roles[id].width + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n            for (var r = this.roles[id].y; r < this.roles[id].y + this.roles[id].height; r++) {\n                var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n                if (Storage_1.default.dx[k] > 0) {\n                    if (Storage_1.default.fullyMap[nr][nright] && Storage_1.default.fullyMap[nr][nright] !== +id) {\n                        this.roles[id].x--;\n                        return true;\n                    }\n                }\n                else {\n                    if (Storage_1.default.fullyMap[nr][nleft] && Storage_1.default.fullyMap[nr][nleft] !== +id) {\n                        this.roles[id].x++;\n                        return true;\n                    }\n                }\n            }\n        }\n        if (Math.abs(Storage_1.default.dy[k])) {\n            var nhead = (this.roles[id].y + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n            var nfoot = (this.roles[id].y + this.roles[id].height - 1 + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n            for (var c = this.roles[id].x; c < this.roles[id].x + this.roles[id].width; c++) {\n                var nc = (c + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n                if (this.roles[id].jumpSpeed < 0) {\n                    if (Storage_1.default.fullyMap[nfoot][nc] && Storage_1.default.fullyMap[nfoot][nc] !== +id) {\n                        this.roles[id].y--;\n                        this.roles[id].verticalTimer = false;\n                        this.roles[id].verticalStatus = undefined;\n                        return true;\n                    }\n                }\n                else {\n                    if (Storage_1.default.fullyMap[nhead][nc] && Storage_1.default.fullyMap[nhead][nc] !== +id) {\n                        this.roles[id].y++;\n                        this.roles[id].jumpSpeed = 1;\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    return Main;\n}());\nexports.default = Main;\n\n\n//# sourceURL=webpack:///./src/Main.ts?");

/***/ }),

/***/ "./src/Role.ts":
/*!*********************!*\
  !*** ./src/Role.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Storage_1 = __webpack_require__(/*! ./Storage */ \"./src/Storage.ts\");\nvar Role = /** @class */ (function () {\n    function Role(data) {\n        this.roleId = data.roleId;\n        // keyboardRecorder\n        this.keyboardRecorder = {};\n        // timer\n        this.attackTimer = 0;\n        this.verticalTimer = false;\n        // element properties\n        this.selfHeight = data.height;\n        this.selfWidth = data.width;\n        this.selfX = data.x;\n        this.selfY = data.y;\n        // basic properties\n        this.horizontalStatus = \"left\";\n        this.verticalStatus = undefined;\n        this.roleStatus = undefined;\n        this.healthPoint = this.maxHealthPoint = data.maxHealthPoint;\n        this.attackPower = data.attackPower;\n        this.attackRange = data.attackRange;\n        this.moveSpeed = data.moveSpeed;\n        this.initJumpSpeed = this.jumpSpeed = data.jumpSpeed;\n        this.attackId = [];\n    }\n    Object.defineProperty(Role.prototype, \"x\", {\n        // element properties setter & getter\n        get: function () {\n            return this.selfX;\n        },\n        set: function (x) {\n            this.selfX = x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Role.prototype, \"y\", {\n        get: function () {\n            return this.selfY;\n        },\n        set: function (y) {\n            this.selfY = y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Role.prototype, \"height\", {\n        get: function () {\n            return this.selfHeight;\n        },\n        set: function (height) {\n            this.selfHeight = height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Role.prototype, \"width\", {\n        get: function () {\n            return this.selfWidth;\n        },\n        set: function (width) {\n            this.selfWidth = width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Role.prototype, \"priStatus\", {\n        get: function () {\n            if (this.roleStatus) {\n                return this.roleStatus;\n            }\n            else if (this.verticalStatus) {\n                return this.verticalStatus;\n            }\n            else {\n                return this.horizontalStatus;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // handle while dead\n    Role.prototype.deadthController = function () {\n        if (this.healthPoint < 0) {\n            this.healthPoint = 0;\n            this.roleStatus = \"dead\";\n        }\n    };\n    // rendering\n    Role.prototype.render = function () {\n        this.renderRole();\n        this.renderHealthBar();\n        this.renderMiniRole();\n    };\n    // remove\n    Role.prototype.removeFlag = function (x, y, k) {\n        for (var r = this.y; r < this.y + this.height; r++) {\n            var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n            for (var c = this.x; c < this.x + this.width; c++) {\n                var nc = (c + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n                if (Storage_1.default.fullyMap[nr][nc] === 0) {\n                    Storage_1.default.fullyMap[nr][nc] = +this.roleId;\n                }\n            }\n        }\n        if (Math.abs(Storage_1.default.dx[k])) {\n            if (Storage_1.default.dx[k] > 0) {\n                for (var r = this.y; r < this.y + this.height; r++) {\n                    var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n                    var nx = (x > this.x) ? (this.x + Storage_1.default.sceneWidth) : this.x;\n                    for (var c = x; c < nx; c++) {\n                        var nc = (c + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n                        if (Storage_1.default.fullyMap[nr][nc] === +this.roleId) {\n                            Storage_1.default.fullyMap[nr][nc] = 0;\n                        }\n                    }\n                }\n            }\n            else {\n                for (var r = this.y; r < this.y + this.height; r++) {\n                    var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n                    var nx = (x < this.x) ? (x + Storage_1.default.sceneWidth) : x;\n                    for (var c = this.x + this.width; c < nx + this.width; c++) {\n                        var nc = (c + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n                        if (Storage_1.default.fullyMap[nr][nc] === +this.roleId) {\n                            Storage_1.default.fullyMap[nr][nc] = 0;\n                        }\n                    }\n                }\n            }\n        }\n        else if (Math.abs(Storage_1.default.dy[k])) {\n            if (Storage_1.default.dy[k] > 0) {\n                var ny = (y > this.y) ? (this.y + Storage_1.default.sceneHeight) : this.y;\n                for (var r = y; r < ny; r++) {\n                    var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n                    for (var c = this.x; c < this.x + this.width; c++) {\n                        var nc = (c + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n                        if (Storage_1.default.fullyMap[nr][nc] === +this.roleId) {\n                            Storage_1.default.fullyMap[nr][nc] = 0;\n                        }\n                    }\n                }\n            }\n            else {\n                var ny = (y < this.y) ? (y + Storage_1.default.sceneHeight) : y;\n                for (var r = this.y + this.height; r < ny + this.height; r++) {\n                    var nr = (r + Storage_1.default.sceneHeight) % Storage_1.default.sceneHeight;\n                    for (var c = this.x; c < this.x + this.width; c++) {\n                        var nc = (c + Storage_1.default.sceneWidth) % Storage_1.default.sceneWidth;\n                        if (Storage_1.default.fullyMap[nr][nc] === +this.roleId) {\n                            Storage_1.default.fullyMap[nr][nc] = 0;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // render the range of attack\n    Role.prototype.renderRange = function () {\n        if (this.horizontalStatus === \"left\") {\n            Storage_1.default.barCtx.fillStyle = \"rgba(102, 204, 255, 0.6)\";\n            Storage_1.default.barCtx.beginPath();\n            Storage_1.default.barCtx.moveTo(this.x - this.attackRange, this.y - 8);\n            Storage_1.default.barCtx.lineTo(this.x - this.attackRange, this.y + this.height + 7);\n            Storage_1.default.barCtx.lineTo(this.x, this.y + this.height - 1);\n            Storage_1.default.barCtx.lineTo(this.x, this.y);\n            Storage_1.default.barCtx.fill();\n        }\n        else if (this.horizontalStatus === \"right\") {\n            Storage_1.default.barCtx.fillStyle = \"rgba(102, 204, 255, 0.6)\";\n            Storage_1.default.barCtx.beginPath();\n            Storage_1.default.barCtx.moveTo(this.x + this.width + this.attackRange - 1, this.y - 8);\n            Storage_1.default.barCtx.lineTo(this.x + this.width + this.attackRange - 1, this.y + this.height + 7);\n            Storage_1.default.barCtx.lineTo(this.x + this.width, this.y + this.height - 1);\n            Storage_1.default.barCtx.lineTo(this.x + this.width, this.y);\n            Storage_1.default.barCtx.fill();\n        }\n    };\n    Role.prototype.renderRole = function () {\n        Storage_1.default.mainCtx.drawImage(Storage_1.default.images[this.priStatus], this.x, this.y, this.width, this.height);\n    };\n    Role.prototype.renderHealthBar = function () {\n        var index = Math.floor((this.healthPoint + 0.2 * this.maxHealthPoint) / (0.4 * this.maxHealthPoint));\n        Storage_1.default.barCtx.strokeStyle = \"#000000\";\n        Storage_1.default.barCtx.strokeRect(this.x - (Role.healthBarWidth - this.width) / 2, this.y - 16, Role.healthBarWidth, Role.healthBarHeight);\n        Storage_1.default.barCtx.fillStyle = Storage_1.default.healthBarColor[index];\n        Storage_1.default.barCtx.fillRect(this.x - (Role.healthBarWidth - this.width) / 2 + 1, this.y - 15, this.healthPoint / this.maxHealthPoint * Role.healthBarWidth * 0.98, Role.healthBarHeight - 2);\n    };\n    Role.prototype.renderMiniRole = function () {\n        var ctx;\n        var color;\n        if (this.roleId === \"2\") {\n            ctx = Storage_1.default.miniSelfRoleCtx;\n            color = \"green\";\n        }\n        else {\n            ctx = Storage_1.default.miniOtherRoleCtx;\n            color = \"red\";\n        }\n        ctx.arc((this.x + this.width / 2) / Storage_1.default.sceneWidth * 200, (this.y + this.height / 2) / Storage_1.default.sceneHeight * 150, (this.width / 2) / Storage_1.default.sceneWidth * 200, 0, 2 * Math.PI);\n        ctx.fillStyle = color;\n        ctx.fill();\n    };\n    Role.healthBarHeight = 8;\n    Role.healthBarWidth = 80;\n    return Role;\n}());\nexports.default = Role;\n\n\n//# sourceURL=webpack:///./src/Role.ts?");

/***/ }),

/***/ "./src/Storage.ts":
/*!************************!*\
  !*** ./src/Storage.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Storage = /** @class */ (function () {\n    function Storage() {\n    }\n    Storage.sceneHeight = 600;\n    Storage.sceneWidth = 800;\n    Storage.images = {};\n    Storage.healthBarColor = [\"#C62828\", \"#EF6C00\", \"#43A047\", \"#43A047\"];\n    // direction move(left, up, right, down)\n    Storage.dx = [-1, 0, 1, 0];\n    Storage.dy = [0, -1, 0, 1];\n    // map\n    Storage.simplifiedMap = [\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ]; // 20 * 15 (40px block)\n    Storage.fullyMap = [];\n    return Storage;\n}());\nexports.default = Storage;\n\n\n//# sourceURL=webpack:///./src/Storage.ts?");

/***/ })

/******/ });